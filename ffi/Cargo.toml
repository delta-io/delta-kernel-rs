[package]
name = "delta_kernel_ffi"
description = "Provide C FFI bindings for the delta_kernel crate"
edition.workspace = true
homepage.workspace = true
license.workspace = true
repository.workspace = true
readme.workspace = true
version.workspace = true
rust-version.workspace = true
build = "build.rs"

# for cargo-release
[package.metadata.release]
release = false

[lib]
crate-type = ["lib", "cdylib", "staticlib"]

[dependencies]
tracing = "0.1"
tracing-core = { version = "0.1", optional = true }
tracing-subscriber = { version = "0.3", optional = true, features = [ "json" ] }
url = "2"
delta_kernel = { path = "../kernel", default-features = false, features = [
  "internal-api",
] }
delta_kernel_ffi_macros = { path = "../ffi-proc-macros", version = "0.15.0" }

[build-dependencies]
cbindgen = "0.29"
libc = "0.2.175"

[dev-dependencies]
rand = "0.9.2"
serde = "1.0.219"
serde_json = "1.0.142"
test_utils = { path = "../test-utils" }
tokio = { version = "1.47" }
trybuild = "1.0"
tempfile = "3.20.0"
itertools = "0.14.0"
object_store = "0.12.3"

[features]
default = ["default-engine-rustls"]
default-engine-native-tls = ["delta_kernel/default-engine-native-tls", "default-engine-base"]
default-engine-rustls = ["delta_kernel/default-engine-rustls", "default-engine-base"]

# This is an 'internal' feature flag which has all the shared bits from default-engine-native-tls and
# default-engine-rustls. There is a check in kernel/lib.rs to ensure you have enabled one of
# default-engine-native-tls or default-engine-rustls, so default-engine-base will not work by itself
default-engine-base = ["delta_kernel/default-engine-base", "delta_kernel/arrow"]

tracing = [ "tracing-core", "tracing-subscriber" ]
internal-api = []
test-ffi = []
